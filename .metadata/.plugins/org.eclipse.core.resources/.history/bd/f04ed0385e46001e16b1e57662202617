package day2;
import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

import java.util.HashMap;

import org.testng.annotations.Test;

import jdk.internal.net.http.common.Log;


public class WayToPostData 
{
	
	@Test(priority=1)
	public void createStudent()
	{
		
		HashMap data = new HashMap();
		data.put("name", "Dimitro Kovienko");
		data.put("location", "Rusia");
		data.put("phone", "9832421037");
		String courseArr[] = {"JAVA","VC++"};
		data.put("courses", courseArr);
		
//		{
//	        "id": 4,
//	        "name": "Dimitro",
//	        "location": "Rusia",
//	        "phone": "3234567832",
//	        "courses": [
//	            "C++",
//	            "C"
//	        ]
//	    }
		
		given()
			.contentType("application/json")
			.body(data)
		
		.when()
			
			.post("http://localhost:3000/student_record")
		
		.then()
			.statusCode(201)
			.body("name",equalTo("Dimitro Kovienko"))
			.body("location", equalTo("Rusia"))
			.body("phone",equalTo("9832421037"))
			.body("courses[0]",equalTo("JAVA"))
			.body("courses[1]",equalTo("VC++"))
			.header("Content-Type","application/json; charset=utf-8")
			
			.log().all();
	}
	
	
	
	@Test(priority=1)
	public void listAllStudent()
	{
		given()
		
		.when()
			.get("http://localhost:3000/student_record")
		
		.then()
			.statusCode(200)
			.log().all();
	}
	
	
	
	@Test(priority=1,dependsOnMethods = {"listAllStudent"})
	public void listSingleStudent()
	{
		
	}
	
	
	
	@Test(priority=1,dependsOnMethods = {"listSingleStudent"})
	public void updateStudent()
	{
		
	}
	
	
	@Test(priority=1,dependsOnMethods = {"updateStudent"})
	public void deleteStudent(int i)
	{
		given()
		
		.when()
			.delete("http://localhost:3000/student_record/"+i)
			
		.then()
			.statusCode(200);
			System.out.println("Deleted");
		
	}
	
	@Test
	public void callMethod()
	{
		WayToPostData obj = new WayToPostData();
//		obj.createStudent();
//		obj.createStudent();
//		obj.createStudent();
		
		int u=9;
		obj.deleteStudent(u); u--;
		obj.deleteStudent(u); u--;
		obj.deleteStudent(u);
		
	}
	
}
